# =============================================================================
# Telegram Voice2Text Bot Configuration
# =============================================================================
# Copy this file to .env and fill in your values:
# cp .env.example .env

# =============================================================================
# Telegram Bot Settings (REQUIRED)
# =============================================================================

# Bot token from @BotFather
# Get your token: https://t.me/BotFather -> /newbot
# Format: 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
TELEGRAM_BOT_TOKEN=your_bot_token_here

# Bot mode: "polling" for local development, "webhook" for production
BOT_MODE=polling

# =============================================================================
# Whisper Settings
# =============================================================================

# Whisper model size: tiny, base, small, medium, large
# Model sizes and performance (approximate):
#   tiny   - ~40 MB,  fastest,  lowest accuracy
#   base   - ~140 MB, fast,     good accuracy (RECOMMENDED)
#   small  - ~480 MB, moderate, better accuracy
#   medium - ~1.5 GB, slow,     high accuracy
#   large  - ~3 GB,   slowest,  highest accuracy
WHISPER_MODEL_SIZE=base

# Device: "cpu" or "cuda" (for NVIDIA GPU)
WHISPER_DEVICE=cpu

# Compute type: int8, float16, float32
#   int8    - fastest, least memory, slightly less accurate (RECOMMENDED for CPU)
#   float16 - requires GPU
#   float32 - slowest, most memory, most accurate
WHISPER_COMPUTE_TYPE=int8

# =============================================================================
# Database Settings
# =============================================================================

# Database URL
# SQLite (default, recommended for local/small scale):
#   sqlite+aiosqlite:///./data/bot.db
# PostgreSQL (recommended for production):
#   postgresql+asyncpg://user:password@localhost:5432/dbname
DATABASE_URL=sqlite+aiosqlite:///./data/bot.db

# =============================================================================
# Processing Settings
# =============================================================================

# Maximum queue size for pending transcription tasks
# If queue is full, new requests will be rejected
# Default: 100
MAX_QUEUE_SIZE=100

# Maximum number of concurrent transcription workers
# Higher = more parallel processing but more CPU/memory usage
# Recommended: 3 for CPU, 5-10 for GPU
MAX_CONCURRENT_WORKERS=3

# Transcription timeout in seconds
# If transcription takes longer than this, it will be cancelled
# Recommended: 120 for base model, 300 for larger models
TRANSCRIPTION_TIMEOUT=120

# Maximum voice message duration in seconds
# Messages longer than this will be rejected
# Default: 300 (5 minutes)
MAX_VOICE_DURATION_SECONDS=300

# =============================================================================
# Quota Settings (Future Feature)
# =============================================================================

# Default daily quota in seconds (60 seconds = 1 minute)
# Users will be able to transcribe this many seconds per day for free
DEFAULT_DAILY_QUOTA_SECONDS=60

# =============================================================================
# Logging Settings
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
# DEBUG   - detailed information, for debugging (shows all HTTP requests including bot token in URLs)
# INFO    - general information (RECOMMENDED for development)
# WARNING - only warnings and errors (RECOMMENDED for production, hides HTTP logs with bot token)
# ERROR   - only errors
# CRITICAL - only critical errors
#
# Recommended configurations:
# - Local development: LOG_LEVEL=INFO (balanced visibility)
# - Production:        LOG_LEVEL=WARNING (hide sensitive data in HTTP logs)
# - Debugging:         LOG_LEVEL=DEBUG (maximum detail, CAREFUL: exposes bot token in logs)
#
# SECURITY NOTE: DEBUG level shows full HTTP request URLs including bot token
# Use WARNING or higher in production to prevent token leaks in logs
LOG_LEVEL=INFO

# =============================================================================
# Webhook Settings (Only for production with BOT_MODE=webhook)
# =============================================================================

# Public URL where Telegram will send updates
# Example: https://yourdomain.com/webhook
# WEBHOOK_URL=

# Port for webhook server (usually 8443, 443, 80, or 88)
# WEBHOOK_PORT=8443

# Listen address (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
# WEBHOOK_LISTEN=0.0.0.0

# Path to SSL certificate (required for custom cert)
# WEBHOOK_CERT_PATH=

# Path to SSL private key (required for custom cert)
# WEBHOOK_KEY_PATH=
