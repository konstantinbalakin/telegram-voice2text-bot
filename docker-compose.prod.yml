version: '3.8'

services:
  bot:
    image: ${IMAGE_NAME:-konstantinbalakin/telegram-voice2text-bot:latest}
    container_name: telegram-voice2text-bot
    restart: unless-stopped

    env_file:
      - .env

    environment:
      - DATABASE_URL=sqlite+aiosqlite:////app/data/bot.db

    volumes:
      # Persist database
      - ./data:/app/data
      # Persist logs
      - ./logs:/app/logs
      # Cache Whisper models to avoid re-downloading
      - whisper-models:/home/appuser/.cache/huggingface

    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

    # Resource limits (adjust based on your VPS)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

      # Zero-downtime deployment configuration
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first  # Start new container before stopping old one
        failure_action: rollback

      rollback_config:
        parallelism: 1
        delay: 5s

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: PostgreSQL for production
  # Uncomment if you want to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:16-alpine
  #   container_name: telegram-bot-db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER:-botuser}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-botpassword}
  #     - POSTGRES_DB=${POSTGRES_DB:-telegram_bot}
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-botuser}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  whisper-models:
    driver: local
  # postgres-data:
  #   driver: local
